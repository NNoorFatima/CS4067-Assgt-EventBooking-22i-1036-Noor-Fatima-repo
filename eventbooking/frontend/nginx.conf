events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11 ipv6=off;
    server {
        listen 80;

        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 30d;
            access_log off;
            add_header Cache-Control "public";
        }


        # Serve frontend static files
        location /user/ {
            alias /usr/share/nginx/html/user-frontend/;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        


        location /booking/ {
            alias /usr/share/nginx/html/booking-frontend/;
            index index.html;
            try_files $uri $uri/ index.html;
        }


        location /event/ {
            alias /usr/share/nginx/html/event-frontend/;
            index index.html;
            try_files $uri $uri/ index.html;
        }
        location /notification/ {
            alias /usr/share/nginx/html/notification-frontend/;
            index index.html;
            try_files $uri $uri/ index.html;
        }

        # Reverse proxy to user service
        location /api/user/ {
            proxy_pass http://user-service:8000/;  # Using container name 'user-service'
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Reverse proxy to booking service
        location /api/booking/ {
            proxy_pass http://booking-service:5001/;  # Using container name 'booking-service'
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Reverse proxy to notification service
        location /api/notification/ {
            proxy_pass http://notification-service:5003/;  # Using container name 'notification-service'
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Reverse proxy to event service
        location /api/event/ {
            proxy_pass http://event-service:8080/;  # Using container name 'event-service'
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        
    }
}
